#pragma checksum "/home/thallis/CentralDuplicatas/Views/Cad/CadJuridico.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4f8936eeb734a3fea8a17ed6ec05f80ac311c314"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cad_CadJuridico), @"mvc.1.0.view", @"/Views/Cad/CadJuridico.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cad/CadJuridico.cshtml", typeof(AspNetCore.Views_Cad_CadJuridico))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/thallis/CentralDuplicatas/Views/_ViewImports.cshtml"
using CentralDuplicatas;

#line default
#line hidden
#line 2 "/home/thallis/CentralDuplicatas/Views/_ViewImports.cshtml"
using CentralDuplicatas.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4f8936eeb734a3fea8a17ed6ec05f80ac311c314", @"/Views/Cad/CadJuridico.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8f04a559329bab731b14f0328caffd1e364e330", @"/Views/_ViewImports.cshtml")]
    public class Views_Cad_CadJuridico : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal mt3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "/home/thallis/CentralDuplicatas/Views/Cad/CadJuridico.cshtml"
  
    ViewData["Title"] = "Cadastro jurídico";

#line default
#line hidden
            BeginContext(51, 953, true);
            WriteLiteral(@"
<script src=""https://unpkg.com/vue""></script>
<script src=""//cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js""></script>


<section class=""hero infoc blue"">
  <div class=""hero-body"">
    <div class=""container has-text-centered"">
     <titulocadastro class=""title"">Olá!<br>
       Preencha os campos para prosseguir</titulocadastro>
    </div>
  </div>

  <div class=""hero-foot"">
    <nav class=""tabs is-boxed is-fullwidth is-large"">
      <div class=""container"">
        <ul><li class=""tab is-active"" onclick=""openTab(event,'WebDev')"">
     <a>Dados da Empresa</a></li>
          <li class=""tab"" onclick=""openTab(event,'cadastroadministrador')""><a>Dados do Administrador</a></li>
          <li class=""tab"" onclick=""openTab(event,'cadastrousuarios')""><a>Dados do Usuário</a></li>
        </ul>
      </div>
    </nav>
  </div>
</section>


<div id=""WebDev"" class=""content-tab"">
 <div class="""" id=""cad"">
    <navbarinternal></navbarinternal>
    ");
            EndContext();
            BeginContext(1004, 8168, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6b59f8ac4e4647c08686387de9e2e605", async() => {
                BeginContext(1010, 1300, true);
                WriteLiteral(@"
        <div v-if=""step === 1"">
            <div>
                <div id=""cadastro"" class=""columns is-desktop"">
                    <div class=""column is-4-desktop is-offset-2-desktop"">
                        <div style=""min-height: 80vh"" class=""dflex1"">
                            <div>
                                <div >
                                    <label class=""label mt3"">CNPJ</label>
                                    <input class=""input"" id=""cnpj"" type=""text"" name=""cnpj"" data-validate=""cnpj"" placeholder=""00.000.000/0000-00""v-model=""dados.entity.cnpj"">
                                    <label class=""label mt3"">Razão Social</label>
                                    <input class=""input""data-validate=""text"" v-model=""dados.entity.fullname"">
                                    <label class=""label mt3"">Nome Fantasia</label>
                                    <input class=""input""  data-validate=""text"" style=""margin-bottom: 0.75rem"" v-model=""dados.entity.aliasname"">
                           ");
                WriteLiteral(@"         <label class=""label mt1"">Atividade</label>
                                    <div class=""control"">
                                    <div class=""select"">
                                        <select style=""width:650px"">
                                        ");
                EndContext();
                BeginContext(2310, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5b7b77ab5fc24e2b9645eb45af81bfd1", async() => {
                    BeginContext(2318, 21, true);
                    WriteLiteral("Selecione a atividade");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2348, 41, true);
                WriteLiteral("\n                                        ");
                EndContext();
                BeginContext(2389, 29, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ffa0736757124f6291b1a385a4c216c0", async() => {
                    BeginContext(2397, 12, true);
                    WriteLiteral("With options");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2418, 4701, true);
                WriteLiteral(@"
                                        </select>
                                    </div>
                                    </div>
                                </div>
                                <div>
                                    <label class=""label mt1"">Email</label>
                                    <input class=""input"" v-model=""dados.emails.address"" label=""Email"">
                                   <div class = ""columns"" v-for=""(telephones, index) in dados.telephones"">
                                        <div class = ""column is-2"">
                                            <label class=""label mt1"">DDD</label>
                                            <input class=""input"" v-model=""telephones.ddd"">
                                        </div>
                                        <div class = ""column is-6"">
                                            <label class=""label mt1"">Telefone</label>
                                            <input type=""text"" data-validate=""brPhon");
                WriteLiteral(@"e"" class=""input"" v-model=""telephones.number"">
                                        </div>
                                        <div class = ""column is-4"">
                                            <label class=""label mt1"">Telefone</label>
                                            <button class=""button is-info"" v-on:click.prevent=""deleteUser(index)"">Deletar</button>
                                            <button  class=""button is-info"" v-on:click.prevent=""addUser"">Adicionar</button>
                                        </div>
                                    </div>
                        
                                </div>
                           
                                <div class=""mt4 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                    <button v-on:click.prevent=""next()"" class=""button is-info"">Próximo</button>
                                </div>
                            </div>
                        </div>
                ");
                WriteLiteral(@"    </div>
                    <div class=""column is-4 is-hidden-touch"">
                        <div style=""min-height: 80vh"" class=""dflex1"">
                            <div>
                                <div class=""infoc blue"">
                                    <div class=""columns"">
                                        <div class=""column is-2-desktop dflex1"">
                                            <i class=""fa fa-cube fa-2x""></i>
                                        </div>
                                        <div class=""column is-10-desktop"">
                                            <span class=""titlec"">Tenha em mãos seu documento de identidade (RG ou CNH)</span>
                                            <br>
                                        </div>
                                    </div>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Suporte Diário</span>
                 ");
                WriteLiteral(@"                   <br>
                                    <span class=""subtitlec"">Time de analistas dedicado a auxiliar em suas operações.</span>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Plataformas Especializadas</span>
                                    <br>
                                    <span class=""subtitlec"">As melhores plataformas para diferentes perfis de trader.</span>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Melhor Custo x Benefício</span>
                                    <br>
                                    <span class=""subtitlec"">Para o trader que opera frequentemente.</span>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Segurança para Investir</span>
                     ");
                WriteLiteral(@"               <br>
                                    <span class=""subtitlec"">Posições de ativos custodiadas na CLBC e opções com proteção do FGC.</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div v-if=""step === 2"">
            <div class=""mt4"">
                <div id=""cadastro1"" class=""columns is-desktop"">
                    <div class=""column is-10-touch is-offset-1-touch is-4-desktop is-offset-2-desktop flexd"">
                        ");
                EndContext();
                BeginContext(7119, 1575, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b596ebcc7db74ca39dec44e8f20a70a7", async() => {
                    BeginContext(7153, 1534, true);
                    WriteLiteral(@"
                             <div style=""min-height: 100vh"">
                            <div class=""control"">
                                <label class=""label mt1"">CEP</label>
                                <input type=""text"" class=""input"" v-model=""cep"" v-on:keyup=""searchCep()"" placeholder=""digite o cep aqui (sem hífen)"">
                                <span v-if=""message"" class=""help is-danger"">CEP não encontrado.</span>
                                <label class=""label mt1"">Cidade</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.city"">
                                <label class=""label mt1"">UF</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.state"">
                                <label class=""label mt1"">Endereço</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.thoroughfare"">
                                <label class=""label mt1"">Numero</label>
     ");
                    WriteLiteral(@"                           <input class=""input"" v-model=""dados.userInfoModel.address.number"">
                                <label class=""label mt1"">Bairro</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.neighborhood"">
                                <label class=""label mt1"">Complemento</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.complement"">
                            </div>
                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(8694, 471, true);
                WriteLiteral(@"
                        <div class=""mt5 mb5 column is-paddingless is-10-touch is-offset-1-touch is-4-desktop flexd"">
                            <button v-on:click.prevent=""prev()"" class=""button is-light"">Anterior</button>
                            <button v-on:click.prevent=""submit()"" class=""button is-info"">Salvar</button>
                        </div>

                </div>
                
            </div>
            </div>
            
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9172, 138, true);
            WriteLiteral("\n</div>\n</div>\n</div>\n<div id=\"cadastroadministrador\" class=\"content-tab\" style=\"display:none\">\n    <navbarinternal></navbarinternal>\n    ");
            EndContext();
            BeginContext(9310, 10110, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2b5e26ffabed454db4f3a678a8cafce6", async() => {
                BeginContext(9316, 7689, true);
                WriteLiteral(@"
        <div v-if=""step === 1"">
            <div>
                <div id=""cadastro"" class=""columns is-desktop"">
                    <div class=""column is-4-desktop is-offset-2-desktop"">
                        <div style=""min-height: 80vh"" class=""dflex1"">
                            <div>
                                <div>
                                    <label class=""label mt3"">CPF</label>
                                    <input class=""input"" id=""cpf"" type=""text"" name=""cpf"" data-validate=""cpf"" placeholder=""000.000.000-00"" maxlength=""14"" v-model=""dados.document"">
                                    <label class=""label mt3"">Nome Completo</label>
                                    <input class=""input"" data-validate=""text"" v-model=""dados.fullName"">
                                    <label class=""label mt3"">Data de nascimento</label>
                                    <input class=""input"" data-validate=""date"" style=""margin-bottom: 0.75rem"" v-model=""dados.birthDate"">
                               ");
                WriteLiteral(@" </div>
                                <div>
                                    <label class=""label mt1"">Email</label>
                                    <input class=""input"" v-model=""dados.emails.address"" label=""Email"">
                                    <label class=""label mt2"">Confirmação Email</label>
                                    <input class=""input"" v-model=""dados.emails.address"" label=""Email"">
                                     <div class = ""columns"">
                                          <div class = ""column is-4"">
                                    <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Receber notificações por e-mail</label></div>
                                    </div>
                                     <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
  ");
                WriteLiteral(@"                              <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Receber Newsletter</label></div>
                                </div>
                            </div>
                                   <div class = ""columns"" v-for=""(telephones, index) in dados.telephones"">
                                    <div class = ""column is-2"">
                                        <label class=""label mt1"">DDD</label>
                                        <input class=""input"" v-model=""telephones.ddd"">
                                    </div>

                                    <div class = ""column is-6"">
                                        <label class=""label mt1"">Telefone</label>
                                        <input type=""text"" data-validate=""brPhone"" class=""input"" v-model=""telephones.number"">
                                    </div>
                              ");
                WriteLiteral(@"      <div class = ""column is-4"">
                                <!-- 
 <div v-if=""modal"" class=""modal is-active"">
      <div class=""modal-background""></div>
      <div class=""modal-card"">
        <header class=""modal-card-head"">
          <p class=""modal-card-title"">Termo</p>
          <button v-on:click=""modal = !modal"" class=""delete"" aria-label=""close""></button>
        </header>
        <section class=""modal-card-body"">
          <ul>
            <li v-for=""c in certificates""> {{c.subjectName}}</li>
          </ul>
        </section>
        <footer class=""modal-card-foot"">
          <button class=""button is-success"">Save changes</button>
          <button class=""button"">Cancel</button>
        </footer>
      </div>
    </div>
</div> -->        <label class=""label mt1"">Telefone</label>
                                        <button class=""button is-info"" v-on:click.prevent=""deleteUser(index)"">Deletar</button>
                                        <button  class=""button is-info"" v-on:click.prevent=""ad");
                WriteLiteral(@"dUser"">Adicionar</button>
                                    </div>
                                    </div>
                                        <div class=""control"">

                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Receber notificações por SMS</label>
                            </div>
                        </div>
                                </div>
                           
                                <div class=""mt4 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                    <button v-on:click.prevent=""next()"" class=""button is-info"">Próximo</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""column is-4 is-hidden-touch"">
           ");
                WriteLiteral(@"             <div style=""min-height: 80vh"" class=""dflex1"">
                            <div>
                                <div class=""infoc blue"">
                                    <div class=""columns"">
                                        <div class=""column is-2-desktop dflex1"">
                                            <i class=""fa fa-cube fa-2x""></i>
                                        </div>
                                        <div class=""column is-10-desktop"">
                                            <span class=""titlec"">Tenha em mãos seu documento de identidade (RG ou CNH)</span>
                                            <br>
                                        </div>
                                    </div>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Suporte Diário</span>
                                    <br>
                                    <span class=""subtitlec"">");
                WriteLiteral(@"Time de analistas dedicado a auxiliar em suas operações.</span>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Plataformas Especializadas</span>
                                    <br>
                                    <span class=""subtitlec"">As melhores plataformas para diferentes perfis de trader.</span>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Melhor Custo x Benefício</span>
                                    <br>
                                    <span class=""subtitlec"">Para o trader que opera frequentemente.</span>
                                </div>
                                <div class=""infoc"">
                                    <span class=""titlec"">Segurança para Investir</span>
                                    <br>
                                    <span class=""subtitlec"">Posi");
                WriteLiteral(@"ções de ativos custodiadas na CLBC e opções com proteção do FGC.</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div v-if=""step === 2"">
            <div class=""mt4"">
                <div id=""cadastro1"" class=""columns is-desktop"">
                    <div class=""column is-10-touch is-offset-1-touch is-4-desktop is-offset-2-desktop flexd"">
                        ");
                EndContext();
                BeginContext(17005, 1575, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ca7e1c22e8d944709e12d38ac66e562d", async() => {
                    BeginContext(17039, 1534, true);
                    WriteLiteral(@"
                             <div style=""min-height: 100vh"">
                            <div class=""control"">
                                <label class=""label mt1"">CEP</label>
                                <input type=""text"" class=""input"" v-model=""cep"" v-on:keyup=""searchCep()"" placeholder=""digite o cep aqui (sem hífen)"">
                                <span v-if=""message"" class=""help is-danger"">CEP não encontrado.</span>
                                <label class=""label mt1"">Cidade</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.city"">
                                <label class=""label mt1"">UF</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.state"">
                                <label class=""label mt1"">Endereço</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.thoroughfare"">
                                <label class=""label mt1"">Numero</label>
     ");
                    WriteLiteral(@"                           <input class=""input"" v-model=""dados.userInfoModel.address.number"">
                                <label class=""label mt1"">Bairro</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.neighborhood"">
                                <label class=""label mt1"">Complemento</label>
                                <input class=""input"" v-model=""dados.userInfoModel.address.complement"">
                            </div>
                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(18580, 833, true);
                WriteLiteral(@"
                        <div class=""control"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Concordo em receber notificações por e-mail</label>
                            </div>
                        </div>

                        <div class=""mt5 mb5 column is-paddingless is-10-touch is-offset-1-touch is-4-desktop flexd"">

                <button v-on:click.prevent=""prev()"" class=""button is-light"">Anterior</button>
                <button v-on:click.prevent=""submit()"" class=""button is-info"">Salvar</button>
                    </div>
                </div>
            </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19420, 137, true);
            WriteLiteral("\n</div>\n</div>\n</div>\n\n  <div id=\"cadastrousuarios\" class=\"content-tab\" style=\"display:none\">\n    <navbarinternal></navbarinternal>\n     ");
            EndContext();
            BeginContext(19557, 4210, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aef5c9ad4d1f4ef394315a23cf5a766f", async() => {
                BeginContext(19563, 4197, true);
                WriteLiteral(@"
         <div class=""container"">
               <div class=""columns is-desktop"">
                    <div class=""column is-8-desktop is-offset-2-desktop"">
                            <div v-for=""(user, index) in users"">
                            <label class=""label mt1"">CPF</label>
                                <input class=""input"" data-validate=""cpf"" placeholder=""000.000.000-00"" v-model=""user.cpf""><br>
                            <label class=""label mt1"">Nome completo</label>
                                <input class=""input"" data-validate=""text"" v-model=""user.nome"">
                                <label class=""label mt1"">Celular</label>
                                <input class=""input"" data-validate=""brPhone"" v-model=""user.celular"">
                            <label class=""label mt1"">E-mail</label>
                                <input class=""input""  v-model=""user.email"">
                                <label class=""label mt1"">Confirmar e-mail</label>
                                <input cla");
                WriteLiteral(@"ss=""input"" v-model=""user.confirmaremail"">
                                <label class=""label mt1"">Autorizações</label>
                            <div class = ""columns"">
                            <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Carregar e validar duplicatas</label>
                            </div>
                            </div>
                            <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Dar aceite/recusar duplicata</label>
                            </div>
                            </div>
               ");
                WriteLiteral(@"             </div>
                             <div class = ""columns"">
                            <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Autorizar transferência de titularidades de duplicatas</label>
                            </div>
                            </div>
                            <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Informar entrega e liquidação</label>
                            </div>
                            </div>
                            </div>
                             <div class = ""columns"">
");
                WriteLiteral(@"                            <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Enviar duplicatas para Protesto</label>
                            </div>
                            </div>
                            <div class = ""column is-6"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Informar endosso</label>
                            </div>
                            </div>
                            </div>
                                <button class=""button is-info"" v-on:click.prevent=""deleteUser(index)"">Deletar</button>
                                <button cla");
                WriteLiteral("ss=\"button is-info\" v-on:click.prevent=\"addUser\">Novo Usuário</button>\n                              ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23767, 474, true);
            WriteLiteral(@"
                          </div>
                          </div>
                            
                          </div>
                          <div style=""text-align: center""> 
                           <button class=""button is-info"" v-on:click.prevent=""enviar"">Enviar convite</button> 
                        </div>
                          </div>
                       
                            <pre>{{ $data }}</pre>
                             </div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
